.wrapper {
    width: 800px; 
    margin: 0 auto;
}

.transition,
.transform,
.animation {
    border: 1px solid #999;
    margin: 20px 0;
    padding: 0;
}

.box { 
    width: 200px;
    height: 200px;
}

.b1 {
    background-color: #80E1D4;
}

.b2 {
    background-color: #9696FF;
}

.b3 {
    background-color: lightgreen;
}

.b4 {
    background-color: lightgoldenrodyellow;
}

.b5 {
    background: lightcoral;
}

/* Transition */

.transition .b1 {
    transition: width .2s ease-in-out;

}

.transition .b1:hover {
    width: 400px;
    height: 150px;
}

.transition .b2 {
    transition: width 500ms, height 200ms;
    transition-timing-function: ease-out;
    transition-delay: .15s; 
}

.transition .b2:hover {
    width: 250px;
    height: 250px;
}

.transition .b3 {
    transition: transform 1s cubic-bezier(.03,.65,.91,1);

}

.transition .b3:hover {
    transform: rotate(80deg);
}

.transition .b4 {
    transition: all .2s ease-out;
}

.transition .b4:hover {
    background-color: black;
    border-radius: 50%;
}

/* Transform */

.transform .box {
    transition: all .1s ease-in;
}

.transform .b1:hover {
    transform: translate(20px, 30px);
}

.transform .b2:hover {
    transform: scale(1.5);
}

.transform .b3 {
    transform-origin: right top;
}

.transform .b3:hover {
    transform: rotate(-45deg);
    
}

.transform .b4 {
    transform: skewX(20deg) skewY(-50deg);  
}

.transform .b4:hover {
    transform: skewX(0) skewY(0);  
}

/* Animation */

@keyframes changeColor {
    from {
        background-color: #cc80CC;
    }
    to {
        background-color: #e89380;
    }
}   

.animation .b1 {
    animation-name: changeColor;
    animation-duration: 2s;
    animation-delay: 2s;
    animation-fill-mode: forwards;
}

@keyframes moveAround {
    0% {
        transform: translate(200px, 0);
    }
    25% {
        transform: translate(200px, 200px);
    }
    75% {
        transform: translate(0, 200px);
    }
    100% {
        transform: translate(0, 0);
    }
}

.animation .b2 {
    animation-name: moveAround;
    animation-duration: 4s;
    animation-delay: 2s;
    animation-iteration-count: 3s;
    animation-direction: alternate;
}

@keyframes transformMe {
    0% {
        transform: scale(.5) rotateX(0) translateX(0);
    }
    100% {
        transform: scale(1) rotateX(180deg) translateX(600px);
    }
}

.animation .b3 {
    animation: transformMe 1.5s 12 alternate forwards ease-in-out;
}

.animation .b4 {
    /* animation-name - animation duration - animation delay -  */

    animation: transformMe 1.5s 3s infinite alternate forwards cubic-bezier(.74,.05,.23,.9);
}

.animation .b4:hover {
    animation-play-state: paused;
}